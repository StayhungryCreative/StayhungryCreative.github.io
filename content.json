{"posts":[{"title":"Gitlab使用教程","text":"按照 git 常用的操作来记录 1、git config 配置本机信息 12345## 配置本机的name和emailgit config --global user.name &quot;github用户名&quot;git config --global user.email &quot;github注册使用的邮箱地址&quot; ## 查看当前配置git config -l # 或者 git config --list 2、git init 将本地当前目录初始化为Git仓库 1git init #如果没有初始化为 git 仓库，后面所有操作都会报错 3、git add 将本地文件到缓存区 1git add --all #最简单无脑的操作，区域所有文件修改都提交，包括删除文件 4、git commit 提交本地更改 1git commit -m &quot;the 1st try&quot; 5、git remote 添加远程Git仓库 12345678910111213# 添加远程仓库并指定名称git remote add &lt;远程仓库别名&gt; &lt;remote_url&gt;## 举例git remote add origin git@github.com:StayhungryCreative/test.git # 此处的origin是远程仓库的别名，可以改成任意其她名称# 删除关联指定名称的远程仓库git remote rm &lt;远程仓库别名&gt;## 举例git remote rm origin## 验证远程Git仓库是否添加成功git remotegit remote -v 6、git push 将本地Git仓库的更新推送到远程Git仓库 12345678910111213git push &lt;远程仓库名&gt; &lt;本地仓库分支名&gt;:&lt;远程仓库分支名&gt; ## 举例git push origin master # 🌳 省略了远程分支名，结果是：本地的master分支推送到origin主机的master分支，如果远程不存在master分支，则新建。git push origin master:20250105# 删除远程主机的分支git push &lt;远程仓库名&gt; --delete &lt;远程仓库分支名&gt;git push &lt;远程仓库名&gt; :&lt;远程仓库分支名&gt;## 举例git push origin :master # 删除远程主机的master分支# 将本地的master分支推动到远程origin仓库，同时指定origin为默认远程仓库git push -u origin master","link":"/StayhungryCreative.github.io.git/2025/01/05/Gitlab%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"},{"title":"Ubuntu搭建个人博客","text":"参考资料 https://blog.csdn.net/wang_da_bing/article/details/82818445 https://www.cnblogs.com/microxiami/p/12641163.html 资料讲的很详细，因此我只简单总结，大概会是我gitlab的第一篇博文。 完成 1-3 将获得一个空白的 gitlab 博客界面 完成 4 将创建自己的第一篇博客，撒花！！！ 1、预备工作1234567891011121314151617181920212223242526272829# 1、安装gitsudo apt-get install git-core# 2、安装nvm## 安装依赖包sudo apt-get updatesudo apt-get install build-essential libssl-dev## 安装nvmcurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash## 验证nvm装好了nvm -v 或者 nvm --version# 3、安装node、npmnvm install node # nvm install stable（功能和上一步相同，也是安装 node，pass）## 验证node、npm安装好了node -vnpm -v# 4、安装hexo，一个博客框架，用来生成静态网页npm install -g hexo-cli## 建站hexo init &lt;folder&gt; #hexo init StayhungryCreativecd &lt;folder&gt; #cd StayhungryCreativenpm install## 生成静态页面hexo g # 或者 hexo generate## 启动服务器hexo s # 或者 hexo server## 用 http://localhost:4000/ 预览 2、ssh 和 Git 配置生成ssh密钥对，本地配置 Git 仓库信息，步骤省略，以后忘记/有需要再补充 1234git config --global user.name &quot;github用户名&quot;git config --global user.email &quot;github注册使用的邮箱地址&quot; ssh -T git@github.com&gt; Hi StayhungryCreative! You've successfully authenticated, but GitHub does not provide shell access. 3、博客部署到 Git以下操作都是在本地生成的博客文件夹StayhungryCreative中进行 1、命令行安装hexo插件 1npm install hexo-deployer-git --save 2、文件_config.yml，打开找到Deployment，按照如下修改 12345678deploy:#type: git#repo: git@github.com:用户名/用户名.github.io.git#branch: mastertype: gitrepo: git@github.com:StayhungryCreative/StayhungryCreative.github.io.gitbranch: master 3、将博客部署到git 123hexo cleanhexo g # 或者 hexo generatehexo d # 或者 hexo deploy 4、补充内容 12# 下载的一个博客主题（使用略）git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 4、创建新博文以下操作都是在本地生成的博客文件夹StayhungryCreative中进行 1234567891011# 1、创建新文章hexo new &quot;Ubuntu搭建个人博客&quot; # 文件路径在 source/_posts/Ubuntu搭建个人博客.md## 打开该md文件撰写即可# 2、本地预览，确认内容是否有问题hexo server# 3、博文部署到 github pageshexo cleanhexo g # 或者 hexo generatehexo d # 或者 hexo deploy","link":"/StayhungryCreative.github.io.git/2025/01/05/Ubuntu%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"ubuntu","slug":"ubuntu","link":"/StayhungryCreative.github.io.git/tags/ubuntu/"},{"name":"gitlab","slug":"gitlab","link":"/StayhungryCreative.github.io.git/tags/gitlab/"},{"name":"hexo","slug":"hexo","link":"/StayhungryCreative.github.io.git/tags/hexo/"}],"categories":[{"name":"工具","slug":"工具","link":"/StayhungryCreative.github.io.git/categories/%E5%B7%A5%E5%85%B7/"}],"pages":[{"title":"归档","text":"","link":"/StayhungryCreative.github.io.git/archives/index.html"},{"title":"友情链接","text":"","link":"/StayhungryCreative.github.io.git/links/index.html"}]}